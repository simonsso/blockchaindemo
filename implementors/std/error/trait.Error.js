(function() {var implementors = {};
implementors["blockchaindemo"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"blockchaindemo/enum.BlockChainDemoError.html\" title=\"enum blockchaindemo::BlockChainDemoError\">BlockChainDemoError</a>","synthetic":false,"types":["blockchaindemo::BlockChainDemoError"]}];
implementors["blockchaindemolib"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"blockchaindemolib/enum.BlockChainDemoError.html\" title=\"enum blockchaindemolib::BlockChainDemoError\">BlockChainDemoError</a>","synthetic":false,"types":["blockchaindemolib::blockchaindemoerror::BlockChainDemoError"]}];
implementors["clap"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"clap/struct.Error.html\" title=\"struct clap::Error\">Error</a>","synthetic":false,"types":["clap::errors::Error"]}];
implementors["proc_macro2"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":false,"types":["proc_macro2::LexError"]}];
implementors["rmp"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rmp/decode/enum.DecodeStringError.html\" title=\"enum rmp::decode::DecodeStringError\">DecodeStringError</a>&lt;'a&gt;","synthetic":false,"types":["rmp::decode::str::DecodeStringError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rmp/decode/enum.ValueReadError.html\" title=\"enum rmp::decode::ValueReadError\">ValueReadError</a>","synthetic":false,"types":["rmp::decode::ValueReadError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rmp/decode/enum.NumValueReadError.html\" title=\"enum rmp::decode::NumValueReadError\">NumValueReadError</a>","synthetic":false,"types":["rmp::decode::NumValueReadError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rmp/encode/enum.ValueWriteError.html\" title=\"enum rmp::encode::ValueWriteError\">ValueWriteError</a>","synthetic":false,"types":["rmp::encode::ValueWriteError"]}];
implementors["rmp_serde"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rmp_serde/decode/enum.Error.html\" title=\"enum rmp_serde::decode::Error\">Error</a>","synthetic":false,"types":["rmp_serde::decode::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rmp_serde/encode/enum.Error.html\" title=\"enum rmp_serde::encode::Error\">Error</a>","synthetic":false,"types":["rmp_serde::encode::Error"]}];
implementors["serde"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>","synthetic":false,"types":["serde::de::value::Error"]}];
implementors["syn"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"syn/struct.Error.html\" title=\"struct syn::Error\">Error</a>","synthetic":false,"types":["syn::error::Error"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()